##############################################################################################################
# Ocaml stuff is based on image tezos/tezos:v8 (if released new one, fell free to upgrade it here)
##############################################################################################################

##############################################################################################################
# Snapshoted data are prepared (on other server than drone, you need to have there actual tezos-node binary):
#
# - create/get snapshot:
#   1. download it from xtz-shots.io, e.g.: `wget https://<testnet>.xtz-shots.io/tezos-<testnet>-<some-level>.full`
#   2. or run node and create snapshot manually to desired level (recomended, you can set set level high):
#     ./tezos-node config init --network granadanet --data-dir /tmp/chain-data
#     ./tezos-node run --network granadanet --data-dir /tmp/chain-data --net-addr 0.0.0.0:9734 --rpc-addr 0.0.0.0:18888 --history-mode archive
#     ./tezos-node snapshot export --block BKyjtcb7VhJfTcqXWjf3p1beRmLVvMQsy5NvRJkPaVUkc6kx4e1 granadanet.20000.full --data-dir /tmp/chain-data/
#
# - import snapshot:
#   ./tezos-node config init --network granadanet --data-dir /tmp/granadanet
#   ./tezos-node snapshot import granadanet.20000.full --data-dir /tmp/granadanet  --reconstruct --network granadanet --history-mode full
#   cd /tmp/granadanet
#   tar -czvf granadanet.20000.snapshoted.tar.gz context store config.json version.json
#   # copy to drone server (see synchronize_ci.sh -> CI_HOSTS)
#   scp granadanet.20000.snapshoted.tar.gz dev@65.21.119.66:/usr/local/etc/tezedge-ci/snapshots
#   scp granadanet.20000.snapshoted.tar.gz dev@65.21.119.67:/usr/local/etc/tezedge-ci/snapshots
#   scp granadanet.20000.snapshoted.tar.gz dev@65.21.119.68:/usr/local/etc/tezedge-ci/snapshots
#   scp granadanet.20000.snapshoted.tar.gz dev@65.21.119.69:/usr/local/etc/tezedge-ci/snapshots
#   scp granadanet.20000.snapshoted.tar.gz dev@65.21.119.70:/usr/local/etc/tezedge-ci/snapshots
#
# - Drone server - extract and prepare dirs:
#   cd /usr/local/etc/tezedge-ci/snapshots
#   mkdir /usr/local/etc/tezedge-ci/data/ocaml-node-granadanet-snapshot-data-1 /usr/local/etc/tezedge-ci/data/ocaml-node-granadanet-snapshot-data-2 /usr/local/etc/tezedge-ci/data/ocaml-node-granadanet-snapshot-data-3
#   tar -xzvf granadanet.20000.snapshoted.tar.gz -C /usr/local/etc/tezedge-ci/data/ocaml-node-granadanet-snapshot-data-1/
#   # check directory `/usr/local/etc/tezedge-ci/data/ocaml-node-granadanet-snapshot-data-1/`, should looks like this:
#     /usr/local/etc/tezedge-ci/data/ocaml-node-granadanet-snapshot-data-1/config.json
#     /usr/local/etc/tezedge-ci/data/ocaml-node-granadanet-snapshot-data-1/version.json
#     /usr/local/etc/tezedge-ci/data/ocaml-node-granadanet-snapshot-data-1/context
#     /usr/local/etc/tezedge-ci/data/ocaml-node-granadanet-snapshot-data-1/store
#   cp -R /usr/local/etc/tezedge-ci/data/ocaml-node-granadanet-snapshot-data-1/* /usr/local/etc/tezedge-ci/data/ocaml-node-granadanet-snapshot-data-2
#   cp -R /usr/local/etc/tezedge-ci/data/ocaml-node-granadanet-snapshot-data-1/* /usr/local/etc/tezedge-ci/data/ocaml-node-granadanet-snapshot-data-3
##############################################################################################################

kind: pipeline
name: prepare-and-cleanup

clone:
  disable: true

workspace:
  path: /drone/src

steps:

- name: cleanup-data
  image: simplestakingcom/tezedge-ci-builder:latest
  user: root
  commands:
    - printenv

image_pull_secrets:
  - docker_pull_secret

trigger:
  branch:
    - master
    - develop

---
##############################################################################################################
# This pipeline:
# - only one which checkouts git
# - runs just run tests, and build artifacts to 'build' volume,
# - aslo copies files needed from git for other pipelines
##############################################################################################################
kind: pipeline
name: build

workspace:
  path: /drone/src

environment:
  BUILD_ARTIFACTS_PATH: /artifacts/build_${DRONE_BUILD_NUMBER}
  TEST_ARTIFACTS_PATH: /tests/build_${DRONE_BUILD_NUMBER}
  SANDBOX_ARTIFACTS_PATH: /artifacts/build_${DRONE_BUILD_NUMBER}/sandbox_files

steps:

- name: build-artifacts
  image: simplestakingcom/tezedge-ci-builder:latest
  pull: always
  user: root
  volumes:
    - name: build
      path: /artifacts
    - name: tests
      path: /tests
    - name: ids
      path: /home/appuser/.ssh
  environment:
    RUST_BACKTRACE: 1
    SODIUM_USE_PKG_CONFIG: 1
    OCAML_BUILD_CHAIN: remote
    LOG_LEVEL: info
    OCAML_LOG_ENABLED: false
  commands:
    # prepare rust toolchain dir
    - echo "`rustup show home`/toolchains/`rustup show active-toolchain | tr " " "\n" | head -1`/lib"
    # build and unit-test
    - cargo clean
    - cargo build --release --workspace
    - cargo test --release --workspace --no-run
    # collect binary artefacts
    - mkdir $${BUILD_ARTIFACTS_PATH}
    - mkdir $${BUILD_ARTIFACTS_PATH}/build_files
    - mkdir $${BUILD_ARTIFACTS_PATH}/build_files/ffi
    - mkdir $${BUILD_ARTIFACTS_PATH}/build_files/tezedge
    - mkdir $${BUILD_ARTIFACTS_PATH}/build_files/identities
    - mkdir -p $${TEST_ARTIFACTS_PATH}/test_data/tests/resources
    - mkdir $${TEST_ARTIFACTS_PATH}/tests
    - mkdir -p $${SANDBOX_ARTIFACTS_PATH}
    # copy binaries
    - cp ./target/release/light-node $${BUILD_ARTIFACTS_PATH}/build_files
    - cp ./target/release/sandbox $${BUILD_ARTIFACTS_PATH}/build_files
    - cp ./target/release/protocol-runner $${BUILD_ARTIFACTS_PATH}/build_files
    - cp ./target/release/context-actions-replayer $${BUILD_ARTIFACTS_PATH}/build_files
    - cp ./tezos/sys/lib_tezos/artifacts/libtezos.so $${BUILD_ARTIFACTS_PATH}/build_files/ffi
    - cp ./sandbox/artifacts/tezos-client $${BUILD_ARTIFACTS_PATH}/build_files
    # copy sapling init files
    - cp ./tezos/sys/lib_tezos/artifacts/sapling-spend.params $${BUILD_ARTIFACTS_PATH}/build_files/ffi
    - cp ./tezos/sys/lib_tezos/artifacts/sapling-output.params $${BUILD_ARTIFACTS_PATH}/build_files/ffi
    # copy sandbox resources
    - cp ./light_node/etc/tezedge_sandbox/sandbox-patch-context.json $${SANDBOX_ARTIFACTS_PATH}
    - cp ./light_node/etc/tezedge_sandbox/006-carthage-protocol-parameters.json $${SANDBOX_ARTIFACTS_PATH}
    - cp ./light_node/etc/tezedge_sandbox/008-edo-protocol-parameters.json $${SANDBOX_ARTIFACTS_PATH}
    - cp ./light_node/etc/tezedge_sandbox/009-florence-protocol-parameters.json $${SANDBOX_ARTIFACTS_PATH}
    - cp ./light_node/etc/tezedge_sandbox/010-granada-protocol-parameters.json $${SANDBOX_ARTIFACTS_PATH}
    - cp ./light_node/etc/tezedge_sandbox/tezedge_drone_sandbox.config $${SANDBOX_ARTIFACTS_PATH}
    - cp ./light_node/etc/tezedge_sandbox/sandbox_start_light_node_args.json $${SANDBOX_ARTIFACTS_PATH}
    - cp ./light_node/etc/tezedge_sandbox/sandbox_init_client_request.json $${SANDBOX_ARTIFACTS_PATH}
    - cp ./light_node/etc/tezedge_sandbox/sandbox_activate_protocol_request.json $${SANDBOX_ARTIFACTS_PATH}
    - cp ./light_node/etc/tezedge_sandbox/sandbox_activate_protocol_009_request.json $${SANDBOX_ARTIFACTS_PATH}
    - cp ./light_node/etc/tezedge_sandbox/sandbox_activate_protocol_010_request.json $${SANDBOX_ARTIFACTS_PATH}
    - cp ./light_node/etc/tezedge_sandbox/sandbox_bake_empty_block.json $${SANDBOX_ARTIFACTS_PATH}
    # copy other resources
    - cp ./light_node/etc/drone/assert_equals.sh $${BUILD_ARTIFACTS_PATH}/build_files/ && chmod 755 $${BUILD_ARTIFACTS_PATH}/build_files/assert_equals.sh
    - cp ./light_node/etc/drone/assert_contains.sh $${BUILD_ARTIFACTS_PATH}/build_files/ && chmod 755 $${BUILD_ARTIFACTS_PATH}/build_files/assert_contains.sh
    - cp ./light_node/etc/drone/wait_file.sh $${BUILD_ARTIFACTS_PATH}/build_files/ && chmod 755 $${BUILD_ARTIFACTS_PATH}/build_files/wait_file.sh
    - cp ./light_node/etc/drone/identities/* $${BUILD_ARTIFACTS_PATH}/build_files/identities/
    - cp ./light_node/etc/tezedge/tezedge_drone.config $${BUILD_ARTIFACTS_PATH}/build_files/tezedge/
    # copy test binaries
    - cp `find ./target/release/deps/ | grep integration_test | grep -v "\.d" | head -1` $${TEST_ARTIFACTS_PATH}/tests/rpc_integration_test
    - cp `find ./target/release/deps/ | grep chain_test | grep -v "\.d" | head -1` $${TEST_ARTIFACTS_PATH}/tests/shell_chain_test
    - cp `find ./target/release/deps/ | grep protocol_runner_test | grep -v "\.d" | head -1` $${TEST_ARTIFACTS_PATH}/tests/protocol_runner_test
    - cp `find ./target/release/deps/ | grep p2p_test | grep -v "\.d" | head -1` $${TEST_ARTIFACTS_PATH}/tests/p2p_test
    # copy test resources
    - cp ./shell/tests/resources/apply_block_request_until_1326.zip $${TEST_ARTIFACTS_PATH}/test_data/tests/resources
    - cp ./shell/tests/resources/sandbox_branch_1_level3.zip $${TEST_ARTIFACTS_PATH}/test_data/tests/resources
    - cp ./shell/tests/resources/sandbox_branch_2_level4.zip $${TEST_ARTIFACTS_PATH}/test_data/tests/resources
    - cp ./shell/tests/resources/sandbox-patch-context.json $${TEST_ARTIFACTS_PATH}/test_data/tests/resources
    # collect modified python tests stuff
    - mkdir -p $${BUILD_ARTIFACTS_PATH}/python-tests/daemons
    - mkdir -p $${BUILD_ARTIFACTS_PATH}/python-tests/launchers
    - mkdir -p $${BUILD_ARTIFACTS_PATH}/python-tests/tools
    - cp -r ./tezos/python-tests/daemons/node.py $${BUILD_ARTIFACTS_PATH}/python-tests/daemons/node.py
    - cp -r ./tezos/python-tests/launchers/sandbox.py $${BUILD_ARTIFACTS_PATH}/python-tests/launchers/sandbox.py
    - cp -r ./tezos/python-tests/tools/constants.py $${BUILD_ARTIFACTS_PATH}/python-tests/tools/constants.py
    # Modify permissions for ssh key
    - chown appuser /home/appuser/.ssh/id_rsa
    - chown appuser /home/appuser/.ssh
    - chmod 600 /home/appuser/.ssh/id_rsa
    - ls -la /home/appuser/.ssh
    # copy build files to all other runner machines
    - echo "runner = $${DRONE_RUNNER_IP_ADDRESS}"
    - chmod 755 ./synchronize_ci.sh && ./synchronize_ci.sh $${BUILD_ARTIFACTS_PATH} /usr/local/etc/tezedge-ci/build/build_${DRONE_BUILD_NUMBER} /home/appuser/.ssh
    - chmod 755 ./synchronize_ci.sh && ./synchronize_ci.sh $${BUILD_ARTIFACTS_PATH}/build_files /usr/local/etc/tezedge-ci/build/build_${DRONE_BUILD_NUMBER}/build_files /home/appuser/.ssh
    - chmod 755 ./synchronize_ci.sh && ./synchronize_ci.sh $${TEST_ARTIFACTS_PATH} /usr/local/etc/tezedge-ci/tests/build_${DRONE_BUILD_NUMBER} /home/appuser/.ssh

image_pull_secrets:
  - docker_pull_secret

depends_on:
  - prepare-and-cleanup

volumes:
  - name: build
    host:
      path: /usr/local/etc/tezedge-ci/build/
  - name: tests
    host:
      path: /usr/local/etc/tezedge-ci/tests/
  - name: ids
    host:
      path: /usr/local/etc/tezedge-ci/id

trigger:
  branch:
    - master
    - develop

---
kind: pipeline
name: florencenet-conseil-tezos-indexer-test

clone:
  disable: true

environment:
  NETWORK: florencenet

volumes:
  - name: cache
    host:
      path: /usr/local/etc/tezedge-ci/data/cache/build_${DRONE_BUILD_NUMBER}/${DRONE_STAGE_NAME}
  - name: tezos-data
    host:
      path: /usr/local/etc/tezedge-ci/data/ocaml-node-florencenet-snapshot-data-with-identity-1
  - name: conseil-sql
    temp: {}

trigger:
  branch:
    - develop

depends_on:
  - build

steps:

  - name: conseil-postgres
    image: postgres:11.9
    detach: true
    environment:
      POSTGRES_USER: conseiluser
      POSTGRES_PASSWORD: p@ssw0rd
      POSTGRES_DB: conseil-local
      POSTGRES_INITDB_ARGS: "--lc-collate=en_US.UTF-8 -E UTF8"
    volumes:
      - name: conseil-sql
        path: /docker-entrypoint-initdb.d/

  - name: tezos-node
    user: root
    image: tezos/tezos:v9-release
    detach: true
    volumes:
      - name: tezos-data
        path: /home/tezos/data
      - name: cache
        path: /cache
    commands:
      - tezos-node run --data-dir /home/tezos/data --history-mode archive --network $${NETWORK} --no-bootstrap-peers --rpc-addr 0.0.0.0:8732

  - name: conseil-api
    image: cryptonomictech/conseil:latest
    detach: true
    environment:
      CONSEIL_XTZ_ENABLED: true
      CONSEIL_XTZ_NETWORK: florencenet
      CONSEIL_XTZ_NODE_PROTOCOL: http
      CONSEIL_XTZ_NODE_HOSTNAME: tezos-node
      CONSEIL_XTZ_NODE_PORT: 8732
      CONSEIL_XTZ_NODE_PATH_PREFIX: /
      CONSEIL_API_DB_URL: jdbc:postgresql://conseil-postgres:5432/conseil-local
      CONSEIL_API_DB_USER: conseiluser
      CONSEIL_API_DB_PASSWORD: p@ssw0rd
      CONSEIL_API_PORT: 80
      CONSEIL_API_KEY: conseil
      JVM_XMX: 4G
    commands:
      - sleep 10
      - /root/wait-for.sh conseil-postgres:5432 -t 120 -- /root/entrypoint.sh conseil-api
    volumes:
      - name: conseil-sql
        path: /root/sql
      - name: cache
        path: /cache

  - name: conseil-lorre
    image: cryptonomictech/conseil:latest
    volumes:
      - name: cache
        path: /cache
    environment:
      CONSEIL_LORRE_DB_URL: jdbc:postgresql://conseil-postgres:5432/conseil-local
      CONSEIL_LORRE_DB_USER: conseiluser
      CONSEIL_LORRE_DB_PASSWORD: p@ssw0rd

      CONSEIL_XTZ_ENABLED: true
      CONSEIL_XTZ_NETWORK: florencenet
      CONSEIL_XTZ_NODE_PROTOCOL: http
      CONSEIL_XTZ_NODE_HOSTNAME: tezos-node
      CONSEIL_XTZ_NODE_PORT: 8732
      CONSEIL_XTZ_NODE_PATH_PREFIX: /

      LORRE_RUNNER_PLATFORM: tezos
      LORRE_RUNNER_NETWORK: florencenet

      CONSEIL_LORRE_BLOCK_RIGHTS_FETCHING_ENABLED: true

      JVM_XMX: 4G
    commands:
      - sleep 15
      - /root/wait-for.sh conseil-postgres:5432 -t 120 -- time -f "%E" -o /cache/time sh -c 'CONSEIL_XTZ_NODE_PATH_PREFIX="" /root/entrypoint.sh conseil-lorre > /tmp/lorre.log & sleep 5; tail -f /tmp/lorre.log | awk "/.*/ { print } /No new blocks/ { exit }"; kill $$!'
      - echo "============== indexing time ============="
      - cat /cache/time

  - name: report-time
    image: busybox
    volumes:
      - name: cache
        path: /cache
    commands:
      - echo "============== indexing time ============="
      - cat /cache/time

---
kind: pipeline
name: florencenet-conseil-tezedge-indexer-test

clone:
  disable: true

environment:
  NETWORK: florencenet
  BUILD_ARTIFACTS_PATH: /artifacts/build_${DRONE_BUILD_NUMBER}

volumes:
  - name: cache
    host:
      path: /usr/local/etc/tezedge-ci/data/cache/build_${DRONE_BUILD_NUMBER}/${DRONE_STAGE_NAME}
  - name: tezos-data
    host:
      path: /usr/local/etc/tezedge-ci/data/tezedge-node-florencenet-snapshot-data-identity-2
  - name: conseil-sql
    temp: {}
  - name: build
    host:
      path: /usr/local/etc/tezedge-ci/build

depends_on:
  - build

trigger:
  branch:
    - develop

steps:

  - name: conseil-postgres
    image: postgres:11.9
    detach: true
    environment:
      POSTGRES_USER: conseiluser
      POSTGRES_PASSWORD: p@ssw0rd
      POSTGRES_DB: conseil-local
      POSTGRES_INITDB_ARGS: "--lc-collate=en_US.UTF-8 -E UTF8"
    volumes:
      - name: conseil-sql
        path: /docker-entrypoint-initdb.d/

  - name: tezedge-node
    image: simplestakingcom/tezedge-ci-builder:latest
    pull: if-not-exists
    user: root
    detach: true
    volumes:
      - name: build
        path: /artifacts
      - name: cache
        path: /cache
      - name: tezos-data
        path: /home/tezos/data
    environment:
      SODIUM_USE_PKG_CONFIG: 1
    commands:
      - cp $${BUILD_ARTIFACTS_PATH}/build_files/protocol-runner /
      - export LD_LIBRARY_PATH="$${BUILD_ARTIFACTS_PATH}/build_files/ffi:$$(rustc --print sysroot)"
      - $${BUILD_ARTIFACTS_PATH}/build_files/light-node --config-file="$${BUILD_ARTIFACTS_PATH}/build_files/tezedge/tezedge_drone.config" --rpc-port=18732 --tezos-data-dir /home/tezos/data --bootstrap-db-path bootstrap_db --identity-file identity.json --disable-bootstrap-lookup  --peer-thresh-low=0 --peer-thresh-high=5 --network "$${NETWORK}" --protocol-runner /protocol-runner

  - name: conseil-api
    image: cryptonomictech/conseil:latest
    detach: true
    environment:
      CONSEIL_XTZ_ENABLED: true
      CONSEIL_XTZ_NETWORK: florencenet
      CONSEIL_XTZ_NODE_PROTOCOL: http
      CONSEIL_XTZ_NODE_HOSTNAME: tezedge-node
      CONSEIL_XTZ_NODE_PORT: 18732
      CONSEIL_XTZ_NODE_PATH_PREFIX: ""
      CONSEIL_API_DB_URL: jdbc:postgresql://conseil-postgres:5432/conseil-local
      CONSEIL_API_DB_USER: conseiluser
      CONSEIL_API_DB_PASSWORD: p@ssw0rd
      CONSEIL_API_PORT: 80
      CONSEIL_API_KEY: conseil
      JVM_XMX: 4G
    commands:
      - sleep 10
      - /root/wait-for.sh conseil-postgres:5432 -t 120 -- /root/entrypoint.sh conseil-api
    volumes:
      - name: conseil-sql
        path: /root/sql
      - name: cache
        path: /cache

  - name: conseil-lorre
    image: cryptonomictech/conseil:latest
    volumes:
      - name: cache
        path: /cache
    environment:
      CONSEIL_LORRE_DB_URL: jdbc:postgresql://conseil-postgres:5432/conseil-local
      CONSEIL_LORRE_DB_USER: conseiluser
      CONSEIL_LORRE_DB_PASSWORD: p@ssw0rd

      CONSEIL_XTZ_ENABLED: true
      CONSEIL_XTZ_NETWORK: florencenet
      CONSEIL_XTZ_NODE_PROTOCOL: http
      CONSEIL_XTZ_NODE_HOSTNAME: tezedge-node
      CONSEIL_XTZ_NODE_PORT: 18732
      CONSEIL_XTZ_NODE_PATH_PREFIX: ""

      LORRE_RUNNER_PLATFORM: tezos
      LORRE_RUNNER_NETWORK: florencenet

      CONSEIL_LORRE_BLOCK_RIGHTS_FETCHING_ENABLED: true

      JVM_XMX: 4G
    commands:
      - sleep 15
      - /root/wait-for.sh conseil-postgres:5432 -t 120 -- time -f "%E" -o /cache/time sh -c 'CONSEIL_XTZ_NODE_PATH_PREFIX="" /root/entrypoint.sh conseil-lorre > /tmp/lorre.log & sleep 5; tail -f /tmp/lorre.log | awk "/.*/ { print } /No new blocks/ { exit }"; kill $$!'
      - echo "============== indexing time ============="
      - cat /cache/time

  - name: report-time
    image: busybox
    volumes:
      - name: cache
        path: /cache
    commands:
      - echo "============== indexing time ============="
      - cat /cache/time

---
kind: pipeline
name: florencenet-tzkt-tezos-indexer-test

clone:
  disable: true

environment:
  NETWORK: florencenet

volumes:
  - name: cache
    host:
      path: /usr/local/etc/tezedge-ci/data/cache/build_${DRONE_BUILD_NUMBER}/${DRONE_STAGE_NAME}
  - name: tezos-data
    host:
      path: /usr/local/etc/tezedge-ci/data/ocaml-node-florencenet-snapshot-data-with-identity-1
  - name: conseil-sql
    temp: {}

trigger:
  branch:
    - develop

depends_on:
  - build

steps:

  - name: tezos-node
    user: root
    image: tezos/tezos:v9-release
    detach: true
    volumes:
      - name: tezos-data
        path: /home/tezos/data
      - name: cache
        path: /cache
    commands:
      - tezos-node run --data-dir /home/tezos/data --history-mode archive --network $${NETWORK} --no-bootstrap-peers --rpc-addr 0.0.0.0:8732

  - name: tzkt-postgres
    image: postgres:13
    detach: true
    environment:
      POSTGRES_USER: tzkt
      POSTGRES_PASSWORD: qwerty
      POSTGRES_DB: tzkt_db
    volumes:
      - name: postgres
        path: /var/lib/postgresql/data

  - name: tzkt-sync
    image: bakingbad/tzkt-sync:latest
    volumes:
      - name: cache
        path: /cache
    environment:
      TZKT_ConnectionStrings__DefaultConnection: "server=tzkt-postgres;port=5432;database=tzkt_db;username=tzkt;password=qwerty;"
      TZKT_TezosNode__ChainId: NetXxkAx4woPLyu
      TZKT_TezosNode__Endpoint: http://tezos-node:8732/
      TZKT_TezosNode_Timeout: 60
    commands:
      - apt-get update && apt-get install time
      - sleep 5
      - cd /app
      - time -f "%E" -o /cache/time sh -c 'dotnet Tzkt.Sync.dll > /tmp/tzkt.log & sleep 1; tail -f /tmp/tzkt.log | awk "/Applied .*0 of/ { print } /Applied 20000 of/ { exit }"; kill $$!'

  - name: report-time
    image: busybox
    volumes:
      - name: cache
        path: /cache
    commands:
      - echo "============== indexing time ============="
      - cat /cache/time

---
kind: pipeline
name: florencenet-tzkt-tezedge-indexer-test

clone:
  disable: true

environment:
  NETWORK: florencenet
  BUILD_ARTIFACTS_PATH: /artifacts/build_${DRONE_BUILD_NUMBER}

volumes:
  - name: cache
    host:
      path: /usr/local/etc/tezedge-ci/data/cache/build_${DRONE_BUILD_NUMBER}/${DRONE_STAGE_NAME}
  - name: tezos-data
    host:
      path: /usr/local/etc/tezedge-ci/data/tezedge-node-florencenet-snapshot-data-identity-2
  - name: conseil-sql
    temp: {}
  - name: build
    host:
      path: /usr/local/etc/tezedge-ci/build

depends_on:
  - build

trigger:
  branch:
    - develop

steps:

  - name: tezedge-node
    image: simplestakingcom/tezedge-ci-builder:latest
    pull: if-not-exists
    user: root
    detach: true
    volumes:
      - name: build
        path: /artifacts
      - name: cache
        path: /cache
      - name: tezos-data
        path: /home/tezos/data
    environment:
      SODIUM_USE_PKG_CONFIG: 1
    commands:
      - cp $${BUILD_ARTIFACTS_PATH}/build_files/protocol-runner /
      - export LD_LIBRARY_PATH="$${BUILD_ARTIFACTS_PATH}/build_files/ffi:$$(rustc --print sysroot)"
      - $${BUILD_ARTIFACTS_PATH}/build_files/light-node --config-file="$${BUILD_ARTIFACTS_PATH}/build_files/tezedge/tezedge_drone.config" --rpc-port=18732 --tezos-data-dir /home/tezos/data --bootstrap-db-path bootstrap_db --identity-file identity.json --disable-bootstrap-lookup  --peer-thresh-low=0 --peer-thresh-high=5 --network "$${NETWORK}" --protocol-runner /protocol-runner

  - name: tzkt-postgres
    image: postgres:13
    detach: true
    environment:
      POSTGRES_USER: tzkt
      POSTGRES_PASSWORD: qwerty
      POSTGRES_DB: tzkt_db
    volumes:
      - name: postgres
        path: /var/lib/postgresql/data

  - name: tzkt-sync
    image: bakingbad/tzkt-sync:latest
    volumes:
      - name: cache
        path: /cache
    environment:
      TZKT_ConnectionStrings__DefaultConnection: "server=tzkt-postgres;port=5432;database=tzkt_db;username=tzkt;password=qwerty;"
      TZKT_TezosNode__ChainId: NetXxkAx4woPLyu
      TZKT_TezosNode__Endpoint: http://tezedge-node:18732/
      TZKT_TezosNode_Timeout: 60
    commands:
      - apt-get update && apt-get install time
      - sleep 5
      - cd /app
      - time -f "%E" -o /cache/time sh -c 'dotnet Tzkt.Sync.dll > /tmp/tzkt.log & sleep 1; tail -f /tmp/tzkt.log | awk "/Applied .*0 of/ { print } /Applied 20000 of/ { exit }"; kill $$!'

  - name: report-time
    image: busybox
    volumes:
      - name: cache
        path: /cache
    commands:
      - echo "============== indexing time ============="
      - cat /cache/time
